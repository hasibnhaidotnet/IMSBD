@model Inventorymanagementsystem.ViewModels.PurchaseViewModel
@{
    ViewData["Title"] = "Create Purchase";
}

<h2>Create Purchase</h2>

<form asp-action="Create" method="post">
    <div class="form-group mb-3">
        <label asp-for="MemoNo" class="form-label"></label>
        <input asp-for="MemoNo" class="form-control" readonly />
        <span asp-validation-for="MemoNo" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="PurchaseDate" class="form-label"></label>
        <input asp-for="PurchaseDate" class="form-control" type="date" />
        <span asp-validation-for="PurchaseDate" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="ClientId" class="form-label"></label>
        <select asp-for="ClientId" asp-items="Model.ClientList" class="form-select"></select>
        <span asp-validation-for="ClientId" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="PaidAmount" class="form-label"></label>
        <input asp-for="PaidAmount" class="form-control" type="number" step="0.01" min="0" />
        <span asp-validation-for="PaidAmount" class="text-danger"></span>
    </div>

    <h4>Purchase Items</h4>
    <table class="table table-bordered" id="purchaseItemsTable">
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Purchase Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @* Initially empty, JS will add row *@
        </tbody>
    </table>
    <button type="button" class="btn btn-secondary mb-3" onclick="addRow()">Add Product</button>

    <button type="submit" class="btn btn-primary">Save</button>
</form>

@section Scripts {
    <script>
        let productList = [];
        fetch("/Purchase/GetProductList")
            .then(res => res.json())
            .then(data => {
                productList = data;
                addRow();
            });

        function addRow() {
            const index = document.querySelectorAll("#purchaseItemsTable tbody tr").length;
            const row = document.createElement("tr");
            row.innerHTML = `
                <td>
                    <select name="Items[${index}].ProductId" class="form-select" required>
                        ${productList.map(p => `<option value="${p.id}">${p.name}</option>`).join('')}
                    </select>
                </td>
                <td><input name="Items[${index}].Quantity" type="number" step="0.01" class="form-control" required /></td>
                <td><input name="Items[${index}].PurchasePrice" type="number" step="0.01" class="form-control" required /></td>
                <td><button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button></td>
            `;
            document.querySelector("#purchaseItemsTable tbody").appendChild(row);
        }

        function removeRow(button) {
            button.closest("tr").remove();
        }
    </script>
}
